{
  "name": "backend1",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "packages/backend1/src",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@simondotm/nx-firebase:build",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/packages/backend1",
        "main": "packages/backend1/src/index.ts",
        "tsConfig": "packages/backend1/tsconfig.app.json",
        "packageJson": "packages/backend1/package.json",
        "assets": []
      }
    },
    "serve": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["nx run backend1:build --watch", "nx run backend1:emulate"]
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["packages/backend1/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "packages/backend1/jest.config.ts",
        "passWithNoTests": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "codeCoverage": true
        }
      }
    },
    "deploy": {
      "executor": "nx:run-commands",
      "options": {
        "command": "firebase deploy --config firebase.json"
      }
    },
    "getconfig": {
      "executor": "nx:run-commands",
      "options": {
        "command": "firebase functions:config:get --config firebase.json > packages/backend1/.runtimeconfig.json"
      }
    },
    "emulate": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "node -e \"setTimeout(()=>{},5000)\"",
          "kill-port --port 9099,5001,8080,9000,5000,8085,9199,9299,4000,4400,4500",
          "firebase functions:config:get  --config firebase.json > dist/packages/backend1/.runtimeconfig.json",
          "firebase emulators:start  --config firebase.json"
        ],
        "parallel": false
      }
    }
  },
  "tags": []
}
